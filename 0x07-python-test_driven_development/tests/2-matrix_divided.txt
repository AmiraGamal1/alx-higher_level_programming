##############################################################################
#                                                                            #
#                                TEST CASES                                  #
##############################################################################

test matrix_divided(matrix, div)

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

not matrix (list of lists) of integers/floats

>>> print(matrix_divided([], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([1, 2, 3], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided("test", 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2, "hi"]], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

vary size

>>> print(matrix_divided([[1, 2, 0], [9, 0.5]], 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

div not a number

>>> print(matrix_divided([[1, 2, 0], [9, 8, 7]], [1]))
Traceback (most recent call last):
TypeError: div must be a number

div is zero

>>> print(matrix_divided([[1, 2, 0], [9, 5, 8]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
